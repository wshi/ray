Web UI
======

Ray的web界面包括了调试Ray作业的工具. 下面这个图展示了使用任务时间轴做性能调试的一个例子:

.. image:: timeline.png

依赖
------------

为了使用UI界面工具, 你需要安装如下依赖.

.. code-block:: bash

  pip install jupyter ipywidgets bokeh

如果你看到一个类似错误

.. code-block:: bash

  Widget Javascript not detected. It may not be installed properly.

那么你需要运行如下命令.

.. code-block:: bash

  jupyter nbextension enable --py --sys-prefix widgetsnbextension

**注意:** 如果你是源码编译Ray, 你也需要一个 ``python2`` 执行环境.

运行Web UI
------------------

目前web UI在 ``ray.init`` 调用时会自动启动. 命令将会打印一个这样形式的URL:

.. code-block:: text

  =============================================================================
  View the web UI at http://localhost:8889/notebooks/ray_ui92131.ipynb?token=89354a314e5a81bf56e023ad18bda3a3d272ee216f342938
  =============================================================================

如果你在本地运行Ray, 你可以使用浏览器直接访问这个URL并看到Jupyter notebook.
如果你在远端使用Ray, 例如在EC2上, 你需要保证该机器上端口是开放的.
通常当你ssh登陆一台机器时,  你也可以使用 ``-L`` 选项实现端口转发:

.. code-block:: bash

  ssh -L <local_port>:localhost:<remote_port> <user>@<ip-address>

因此对于上面的URL, 你可以使用端口8889.
Jupyter notebook试图在端口8888上运行, 但是如果没有起来那么它会依次尝试端口直到找到一个开放端口.

你也可以直接在机器上开放端口, 但是出于安全原因并不推荐, 因为这会将机器暴露在互联网中.
这样的话, 你需要将localhost换成远端机器正在使用的公共IP.

一旦你访问了这个URL, 通过点击如下内容启动UI界面.

.. code-block:: text

  Kernel -> Restart and Run all

特性
--------

UI界面支持对任务ID、对象ID、任务时间线、任务完成时间分布、连续时间内CPU和集群利用率等的细节进行搜索.

任务和对象ID
~~~~~~~~~~~~~~~~~~~

当给出一个对象或者任务ID后, 这些小工具可以显示具体细节. 如果你有Python对象, 那么如下展示的, 可以通过调用 ``.hex`` 获得对象ID:

.. code-block:: python

   # 这将返回ID的hex字符串.
   objectid = ray.put(1)
   literal_id = objectid.hex()

然后去除引号复制返回的字符串. 或者当你选中一个任务查看时间线时, 它们能在任务时间线中下方的输出区域中找到.

对于任务ID, 他们可以通过搜索任务创建对象ID的方式找到, 或者通过任务时间线的输出区域.

任务的额外细节也能在任务时间线中找到; 搜索只是为你提供了一种简单的方式当有一百万任务时查找一个特定任务.

任务时间线
~~~~~~~~~~~~~

这个小工具有三个组成部分: 工具顶端的控制区域, 时间线本身, 以及下方的细节信息区域.
在控制区域, 你首先选择是否通过任务完成时间还是任务数量选择一个任务子集.
你可以通过一个双面滑动器或者在文本框中输入特定的值来控制百分比.
如果你选择通过任务数量进行选择, 当输入一个负数N的时候代表最近的N次任务运行,
当输入一个正数N的时候代表最初的N次任务运行. 如果有10个任务, 你在文本框内输入-1,
那么滑动器会显示90%到100%区间, 如果是1的话则显示0%到10%区间.
最后, 你可以选择你是否需要在任务之间显示加边(如果一个任务调用了其它任务)或者
加对象依赖(一个任务的结果传递到了其它任务), 以及是否需要在时间线上将任务的不同阶段打散成独立的任务.

对于时间线来说, 每一个节点在该时间线内有一个下拉列表,
下拉列表中的每一行代表一个worker.
移动和缩放通过选中浮动任务栏中的不同图标进行操作.
第一个是选中, 第二个是平移, 第三个是缩放, 第四个是时间选择. 为了显示边, 你需要在视图选项(View Option)中设置流事件(Flow Event).

如果你在浮动任务栏中开启选择功能后选中一个任务, 页面下方的细节区域将会填满包含任务ID, 函数ID, 任务每个阶段持续多少秒之类的信息.

时间分布和时间序列
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在任务时间线中, 任务选择可以控制完成时间分布、CPU利用率以及集群利用率的显示.

任务完成时间分布追踪所有选中任务的完成时间直方图.

CPU利用率可以统计在一个给定时间多少CPU核在被使用. 一般来说每一个核都会分配一个worker,
也就是等价于统计有多少worker运行在Ray上.

集群利用率提供一个以时间作为x轴的热力图, y轴是节点的IP地址, 节点的颜色则由给点时间多少worker运行在该节点决定.

问题定位
---------------

Ray时间线的可视化可能在Firefox或者Safari下不能正常工作.
